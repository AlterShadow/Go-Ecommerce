name: CI GoShop
on:
  push:
     branches: [ master, develop ]
  pull_request:
    branches: [master, develop]

jobs:
  CI:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      database_uri: postgres://postgres:test@localhost:5432/postgres

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: "test"
        ports:
          - 5432:5432

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache go pkg
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -o main
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0

      - name: Run unit tests
        run: make unittest

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
